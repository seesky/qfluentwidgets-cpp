cmake_minimum_required(VERSION 3.14)

project(qfluentwidgets-cpp  LANGUAGES C CXX)

# 设置编译模式为Debug
set(CMAKE_BUILD_TYPE Debug)

# 或者设置编译模式为Release
#set(CMAKE_BUILD_TYPE Release)
set(CMAKE_AUTOMOC TRUE)
# GoogleTest requires at least C++14
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")

INCLUDE_DIRECTORIES(C://msys64//mingw64//include//glib-2.0)
INCLUDE_DIRECTORIES(C://msys64//mingw64//lib//glib-2.0//include)
INCLUDE_DIRECTORIES(C://msys64//mingw64//include//c++//13.1.0)
INCLUDE_DIRECTORIES(C://msys64//mingw64//include//c++//13.1.0//x86_64-w64-mingw32)
INCLUDE_DIRECTORIES(C://msys64//mingw64//include//opencv4//opencv2)


FIND_LIBRARY(COMM_LIB comm C://msys64//mingw64//lib NO_DEFAULT_PATH)

file(GLOB HEADER_FILES
    "qfluentwidgets/common/*.h"
    "qfluentwidgets/components/date_time/*.h"
    "qfluentwidgets/components/dialog_box/*.h"
    "qfluentwidgets/components/material/*.h"
    "qfluentwidgets/components/settings/*.h"
    "qfluentwidgets/components/widgets/*.h"
    "qfluentwidgets/qframelesswindow/titlebar/*.h"
    "qfluentwidgets/qframelesswindow/utils/*.h"
    "qfluentwidgets/qframelesswindow/windows/*.h"
)

file(GLOB SOURCE_FILES
    "qfluentwidgets/common/*.cpp"
    "qfluentwidgets/components/date_time/*.cpp"
    "qfluentwidgets/components/dialog_box/*.cpp"
    "qfluentwidgets/components/material/*.cpp"
    "qfluentwidgets/components/settings/*.cpp"
    "qfluentwidgets/components/widgets/*.cpp"
    "qfluentwidgets/qframelesswindow/titlebar/*.cpp"
    "qfluentwidgets/qframelesswindow/utils/*.cpp"
    "qfluentwidgets/qframelesswindow/windows/*.cpp"
)


find_package(Qt5 COMPONENTS Core Gui Widgets Svg Xml REQUIRED)
add_executable(
  button_test
  qfluentwidgets/test/button_test.cpp
  ${HEADER_FILES} 
  ${SOURCE_FILES}
)

target_link_options(button_test PRIVATE "-Wl,--whole-archive")


target_link_libraries(
  button_test
  Qt5::Widgets
  Qt5::Core
  Qt5::Gui
  Qt5::Svg
  Qt5::Xml
  jsoncpp
  Dwmapi
)



add_executable(
  check_box_test
  qfluentwidgets/test/check_box_test.cpp
  ${HEADER_FILES} 
  ${SOURCE_FILES}
)

target_link_options(check_box_test PRIVATE "-Wl,--whole-archive")


target_link_libraries(
  check_box_test
  Qt5::Widgets
  Qt5::Core
  Qt5::Gui
  Qt5::Svg
  Qt5::Xml
  jsoncpp
  Dwmapi
)



add_executable(
  combo_box_test
  qfluentwidgets/test/combo_box_test.cpp
  ${HEADER_FILES} 
  ${SOURCE_FILES}
)

target_link_options(combo_box_test PRIVATE "-Wl,--whole-archive")


target_link_libraries(
  combo_box_test
  Qt5::Widgets
  Qt5::Core
  Qt5::Gui
  Qt5::Svg
  Qt5::Xml
  jsoncpp
  Dwmapi
)




add_executable(
  radio_button_test
  qfluentwidgets/test/radio_button_test.cpp
  ${HEADER_FILES} 
  ${SOURCE_FILES}

)

target_link_options(radio_button_test PRIVATE "-Wl,--whole-archive")


target_link_libraries(
  radio_button_test
  Qt5::Widgets
  Qt5::Core
  Qt5::Gui
  Qt5::Svg
  Qt5::Xml
  jsoncpp
  Dwmapi
)




add_executable(
  slider_test
  qfluentwidgets/test/slider_test.cpp
  ${HEADER_FILES} 
  ${SOURCE_FILES}
)

target_link_options(slider_test PRIVATE "-Wl,--whole-archive")


target_link_libraries(
  slider_test
  Qt5::Widgets
  Qt5::Core
  Qt5::Gui
  Qt5::Svg
  Qt5::Xml
  jsoncpp
  Dwmapi
)



add_executable(
  switch_button_test
  qfluentwidgets/test/switch_button_test.cpp
  ${HEADER_FILES} 
  ${SOURCE_FILES}
)

target_link_options(switch_button_test PRIVATE "-Wl,--whole-archive")


target_link_libraries(
  switch_button_test
  Qt5::Widgets
  Qt5::Core
  Qt5::Gui
  Qt5::Svg
  Qt5::Xml
  jsoncpp
  Dwmapi
)




add_executable(
  calendar_picker_test
  qfluentwidgets/test/calendar_picker_test.cpp
  ${HEADER_FILES} 
  ${SOURCE_FILES}
)

target_link_options(calendar_picker_test PRIVATE "-Wl,--whole-archive")


target_link_libraries(
  calendar_picker_test
  Qt5::Widgets
  Qt5::Core
  Qt5::Gui
  Qt5::Svg
  Qt5::Xml
  jsoncpp
  Dwmapi
)


add_executable(
  time_picker_test
  qfluentwidgets/test/time_picker_test.cpp
  ${HEADER_FILES} 
  ${SOURCE_FILES}

)

target_link_options(time_picker_test PRIVATE "-Wl,--whole-archive")


target_link_libraries(
  time_picker_test
  Qt5::Widgets
  Qt5::Core
  Qt5::Gui
  Qt5::Svg
  Qt5::Xml
  jsoncpp
  Dwmapi
)


add_executable(
  color_dialog_test
  qfluentwidgets/test/color_dialog_test.cpp
  ${HEADER_FILES} 
  ${SOURCE_FILES}
)

target_link_options(color_dialog_test PRIVATE "-Wl,--whole-archive")


target_link_libraries(
  color_dialog_test
  Qt5::Widgets
  Qt5::Core
  Qt5::Gui
  Qt5::Svg
  Qt5::Xml
  jsoncpp
  Dwmapi
)


add_executable(
  custom_message_box_test
  qfluentwidgets/test/custom_message_box_test.cpp
  ${HEADER_FILES} 
  ${SOURCE_FILES}
)
target_link_options(custom_message_box_test PRIVATE "-Wl,--whole-archive")


target_link_libraries(
  custom_message_box_test
  Qt5::Widgets
  Qt5::Core
  Qt5::Gui
  Qt5::Svg
  Qt5::Xml
  jsoncpp
  Dwmapi
)

add_executable(
  dialog_test
  qfluentwidgets/test/dialog_test.cpp
  ${HEADER_FILES} 
  ${SOURCE_FILES}
)
target_link_options(dialog_test PRIVATE "-Wl,--whole-archive")


target_link_libraries(
  dialog_test
  Qt5::Widgets
  Qt5::Core
  Qt5::Gui
  Qt5::Svg
  Qt5::Xml
  jsoncpp
  Dwmapi
)



add_executable(
  flyout_test
  qfluentwidgets/test/flyout_test.cpp
  ${HEADER_FILES} 
  ${SOURCE_FILES}
)
target_link_options(flyout_test PRIVATE "-Wl,--whole-archive")


target_link_libraries(
  flyout_test
  Qt5::Widgets
  Qt5::Core
  Qt5::Gui
  Qt5::Svg
  Qt5::Xml
  jsoncpp
  Dwmapi
)



add_executable(
  folder_list_dialog_test
  qfluentwidgets/test/folder_list_dialog_test.cpp
  ${HEADER_FILES} 
  ${SOURCE_FILES}
)
target_link_options(folder_list_dialog_test PRIVATE "-Wl,--whole-archive")


target_link_libraries(
  folder_list_dialog_test
  Qt5::Widgets
  Qt5::Core
  Qt5::Gui
  Qt5::Svg
  Qt5::Xml
  jsoncpp
  Dwmapi
)


add_executable(
  message_dialog_test
  qfluentwidgets/test/message_dialog_test.cpp
  ${HEADER_FILES} 
  ${SOURCE_FILES}
)
target_link_options(message_dialog_test PRIVATE "-Wl,--whole-archive")


target_link_libraries(
  message_dialog_test
  Qt5::Widgets
  Qt5::Core
  Qt5::Gui
  Qt5::Svg
  Qt5::Xml
  jsoncpp
  Dwmapi
)


add_executable(
  teaching_tip_test
  qfluentwidgets/test/teaching_tip_test.cpp
  ${HEADER_FILES} 
  ${SOURCE_FILES}
)
target_link_options(teaching_tip_test PRIVATE "-Wl,--whole-archive")


target_link_libraries(
  teaching_tip_test
  Qt5::Widgets
  Qt5::Core
  Qt5::Gui
  Qt5::Svg
  Qt5::Xml
  jsoncpp
  Dwmapi
)


add_executable(
  acrylic_brush_test
  qfluentwidgets/test/acrylic_brush_test.cpp
  ${HEADER_FILES} 
  ${SOURCE_FILES}

)

target_link_options(acrylic_brush_test PRIVATE "-Wl,--whole-archive")


target_link_libraries(
  acrylic_brush_test
  Qt5::Widgets
  Qt5::Core
  Qt5::Gui
  Qt5::Svg
  Qt5::Xml
  jsoncpp
  Dwmapi
)



add_executable(
  acrylic_combo_box_test
  qfluentwidgets/test/acrylic_combo_box_test.cpp
  ${HEADER_FILES} 
  ${SOURCE_FILES}

)

target_link_options(acrylic_combo_box_test PRIVATE "-Wl,--whole-archive")


target_link_libraries(
  acrylic_combo_box_test
  Qt5::Widgets
  Qt5::Core
  Qt5::Gui
  Qt5::Svg
  Qt5::Xml
  jsoncpp
  Dwmapi
)



